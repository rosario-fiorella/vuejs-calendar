openapi: "3.0.2"
info:
  title: API Calendar
  description: "Client documentation for the Calendar API"
  license:
    name: MIT License
    url: https://github.com/rosario-fiorella/calendar-fe/blob/master/LICENSE
  version: "1.0.5"
servers:
  - url: https://localhost/api/v1
  - url: http://localhost/api/v1

tags:
  - name: App
    description: App data first request
  - name: Auth
    description: Endpoint Authorization
  - name: Entity
    description: Endpoint Entity
  - name: Booking
    description: Booking Request

paths:
  /auth/login:
    post:
      tags:
        - Auth
      requestBody:
        description: User login
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
  /auth/logout:
    post:
      tags:
        - Auth
      security:
        - BearerAuth: []
      requestBody:
        description: User logout
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Logout"
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
  /orders:
    post:
      tags:
        - Booking
      requestBody:
        description: Booking request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
  /entities:
    get:
      tags:
        - Entity
      parameters:
        - name: filter
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/EntityFilter"
        - name: sort
          in: query
          schema:
            type: string
            enum: [asc, desc]
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: language
          in: query
          schema:
            type: string
            description: iso 639-1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadResponse"
components:
  schemas:
    Login:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
      required:
        - userName
        - password
        - passwordConfirm
    Logout:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        status:
          type: integer
          description: User Status
          format: int32
      required:
        - accessToken
        - refreshToken
        - userName
        - firstName
        - lastName
        - email
        - status
    FilterPrice:
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: number
    FilterWith:
      type: array
      items:
        type: object
        properties:
          field:
            oneOf:
              - type: number
              - type: string
          value:
            oneOf:
              - type: string
              - type: number
              - type: array
                items:
                  oneOf:
                    - type: number
                    - type: string
          operator:
            type: string
            enum:
              - include
              - exclude
              - higher
              - higher_or_equal
              - lower
              - lower_or_equal
        required:
          - field
          - value
          - operator
    FilterDate:
      type: object
      properties:
        from:
          type: string
          description: Datetime format ISO 8601
        to:
          type: string
          description: Datetime format ISO 8601
    EntityResponse:
      type: array
      items:
        type: object
        properties:
          id: 
            type: integer
          calendar:
            type: object
            $ref: "#/components/schemas/EntityCalendar"
          content:
            type: object
            $ref: "#/components/schemas/EntityContent"
          ecommerce:
            type: object
            $ref: "#/components/schemas/EntityEcommerce"
          groups: 
            type: array
            items: 
              type: object
              $ref: "#/components/schemas/EntityAttributes"
          media: 
            type: array
            items: 
              $ref: "#/components/schemas/EntityMedia"
          tags: 
            type: array
            items: 
              $ref: "#/components/schemas/EntityTag"
          resources:
            type: array
            items: 
              type: object
              $ref: "#/components/schemas/EntityResource"
          notices: 
            type: array
            items: 
              type: object
              $ref: "#/components/schemas/EntityNotice"
          services: 
            type: array
            items: 
              type: object
              $ref: "#/components/schemas/EntityService"
    EntityAttributes:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        lang:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
              name:
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    values: 
                      oneOf:
                        - type: number
                        - type: string
                    unit: 
                      type: string
                      enum:
                        - null
                        - h
                        - d
                        - m
                        - y
                    currency:
                      type: string
    EntityContent:
      type: object
      properties:
        id:
          type: integer
        entity_id: 
          type: integer
        slug:
          type: string
        name: 
          type: string
        description:
          type: string
        short_description: 
          type: string
        excerpt: 
          type: string
        note:
          type: string
        lang: 
          type: string
      required:
        - id
        - entity_id
        - slug
        - name
        - description
        - short_description
        - excerpt
        - note
        - lang
    EntityCalendar:
      type: object
      properties:
        id:
          type: integer
        entity_id: 
          type: integer
        status_code:
          type: integer
        date_start:
          type: string
        date_end:
          type: string
        time_start:
          type: string
        time_end:    
          type: string
      required:
        - id
        - entity_id
        - status_code
        - date_start
        - date_end
        - time_start
        - time_end
    EntityEcommerce:
      type: object
      properties:
        id:
          type: integer
        entity_id: 
          type: integer
        price_original:
          type: number
        price_reduction:
          type: number
        price_current:
          type: number
        tax_included:
          type: boolean
        tax:
          type: number
        min_spent:
          type: number
        min_person:
          type: number
        min_time:
          type: number
        expired_time:
          type: string
        currency:
          type: string
        unit:
          type: string
          enum:
            - h
            - d
            - m
            - y
        lang:
          type: string
      required:
        - id
        - entity_id
        - price_original
        - price_reduction
        - price_current
        - tax_included
        - tax
        - min_spent
        - min_person
        - min_time
        - expired_time
        - currency
        - unit
        - lang
    EntityMedia:
      type: object
      properties:
        id:
          type: integer
        entity_id: 
          type: integer
        name:
          type: string
        alternative_name:
          type: string
        type:
          type: string
        url: 
          type: string
        lang:
          type: string
      required:
        - id
        - entity_id
        - name
        - alternative_name
        - type
        - url
        - lang
    EntityNotice:
      type: array
      items:
        type: object
        properties:
          calendar:
            type: object
            $ref: "#/components/schemas/EntityCalendar"
          content:
            type: object
            $ref: "#/components/schemas/EntityContent"
    EntityService:
      type: array
      items:
        type: object
        properties:
          calendar:
            type: object
            $ref: "#/components/schemas/EntityCalendar"
          content:
            type: object
            $ref: "#/components/schemas/EntityContent"
          ecommerce:
            type: object
            $ref: "#/components/schemas/EntityEcommerce"
          resources:
            type: object
            $ref: "#/components/schemas/EntityResource"
          notices:
            type: object
            $ref: "#/components/schemas/EntityNotice"
    EntityResource:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          entity_id: 
            type: integer
          name: 
            type: string
          alternative_name:
            type: string
          url:
            type: string
          lang:
            type: string
        required:
          - id
          - entity_id
          - name
          - alternative_name
          - url
          - lang
    EntityTag:
      type: object
      properties:
        id:
          type: integer
        entity_id: 
          type: integer
        name:
          type: string
        lang:
          type: string
        icon:
          type: string
      required:
        - id
        - entity_id
        - name
        - lang
        - icon
    EntityFilter:
      type: object
      properties:
        attributes:
          $ref: "#/components/schemas/FilterWith"
        dateRange:
          type: object
          $ref: "#/components/schemas/FilterDate"
        name:
          type: string
          description: Match name
        slug:
          type: string
          description: Match slug
        price:
          $ref: "#/components/schemas/FilterPrice"
        services:
          type: array
          items:
            type: integer
        tags:
          type: array
          items:
            type: integer
    Booking:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email: 
          type: string
        adults:
          type: number
        kids:
          type: number
        note:
          type: string
        entities:
          type: array
          items:
            type: number            
        date_start:
          type: string
        date_end:
          type: string
      required:
        - firstName
        - lastName
        - email
        - adults
        - kids
        - note
        - entities
        - date_start
        - date_end
    BadResponse:
      type: object
      properties:
        status:
          type: boolean
        code:
          type: integer
        message:
          type: string
        data:
          type: object

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []
    BearerAuth: []
